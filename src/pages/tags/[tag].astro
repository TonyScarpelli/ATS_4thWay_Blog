---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";

export async function getStaticPaths() {

  const allPosts = await getCollection("posts");
  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

  // sorts pubDate last to first and keeps drafts out of the list
  let posts = (await getCollection("posts"))
  .filter((p) => p.data.draft !== true)
  .sort((a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf());

  return uniqueTags.map((tag) => {
    const filteredPosts = posts.filter((post) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts.map((post) => (
        <BlogPost url={"/posts/" + post.slug} title={post.data.title} />
      ))
    }
  </ul>
</BaseLayout>

